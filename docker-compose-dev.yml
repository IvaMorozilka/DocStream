services:
  processor:
    build:
      context: ./processor-service
    ports:
      - "8000:8000"
    volumes:
      - ./processor-service:/code/app
      - ./data/dlt_data:/var/dlt
    env_file:
      - worker.env
    networks:
      - main_network
    restart: always
    depends_on:
      - processor_db

  bot:
    build:
      context: ./tg-bot
    restart: always
    volumes:
      - ./tg-bot:/code/app
    env_file:
      - bot.env
    networks:
      - main_network
    depends_on:
      - bot_db

  processor_db:
    image: mysql:8.0.41
    env_file:
      - processor_db.env
    ports:
      - "3306:3306"
    volumes:
      - ./data/processor_postgres_data:/var/lib/mysql
    networks:
      - main_network
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always

  bot_db:
    image: postgres:alpine
    env_file:
      - bot_db.env
    volumes:
      - ./data/bot_db_data:/var/lib/postgresql/data
    networks:
      - main_network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: always

  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000" # API
      - "9001:9001" # Console
    volumes:
      - ./data/minio_data:/data
    env_file:
      - minio.env
    command: server /data --console-address ":9001"
    networks:
      - main_network
    restart: always

networks:
  main_network:
    driver: bridge
